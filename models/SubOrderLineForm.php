<?php
/**
 * Created by PhpStorm.
 * User: josemiguelmorillocallejon
 * Date: 14/01/18
 * Time: 08:19
 */

namespace app\models;


use yii\base\Model;

class SubOrderLineForm extends Model
{
    private $_subOrderLines;
    private $_lineDetails;

    public function rules()
    {
        return [
            [['SubOrderLines'], 'required'],
            [['LineDetails'], 'safe'],
        ];
    }

    public function afterValidate()
    {
        $error = false;
        if (!$this->lineDetails->validate()) {
            $error = true;
        }
        if (!$this->lineDetails->validate()) {
            $error = true;
        }
        if ($error) {
            $this->addError(null); // add an empty error to prevent saving
        }
        parent::afterValidate(); // TODO: Change the autogenerated stub
    }

    public function GetSubOrderLines() {
        return $this->_subOrderLines;
    }

    public function setSubOrderLines($subOrderLine)
    {
        if ($subOrderLine instanceof SubOrderLines) {
            $this->_subOrderLines = $subOrderLine;
        } else if (is_array($subOrderLine)) {
            $this->_subOrderLines->setAttributes($subOrderLine);
        }
    }

    public function setLineDetails($lineDetail) {
        if ($lineDetail instanceof LineDetails) {
            $this->_lineDetails = $lineDetail;
        } else if (is_array($lineDetail)) {
            $this->_lineDetails->setAttributes($lineDetail);
        }
    }

    public function GetLineDetails() {
        if ($this->_lineDetails === null) {
            if ($this->SubOrderLines->isNewRecord) {
                $this->_lineDetails = new LineDetails();
                $this->_lineDetails->loadDefaultValues();
            } else {
                $this->_lineDetails = $this->subOrderLines->lineDetail;
            }
        }
        return $this->_lineDetails;
    }

    public function save() {
        if (!$this->validate()) {
            return false;
        }

        $transaction = \Yii::$app->db->beginTransaction();
        if (!$this->lineDetails->save()) {
            $transaction->rollBack();
            return false;
        }
        $this->subOrderLines->line_detail_id = $this->lineDetails->line_detail_id;
        if (!$this->subOrderLines->save(false)) {
            $transaction->rollBack();
            return false;
        }

        $transaction->commit();

        return true;
    }

//    public function errorSummary($form)
//    {
//        $errorLists = [];
//        foreach ($this->getAllModels() as $id => $model) {
//            $errorList = $form->errorSummary($model, [
//                'header' => '<p>Please fix the following errors for <b>' . $id . '</b></p>',
//            ]);
//            $errorList = str_replace('<li></li>', '', $errorList); // remove the empty error
//            $errorLists[] = $errorList;
//        }
//        return implode('', $errorLists);
//    }

    private function getAllModels()
    {
        return [
            'SubOrderLines' => $this->subOrderLines,
            'LineDetails' => $this->lineDetails,
        ];
    }

}